from pytest import mark
from scsavailability import features as feat
import pandas as pd
import numpy as np

@mark.package
@mark.features
class FeaturesTests:
    def test_load_module_lookup(self):
        lu = feat.load_module_lookup()
        assert list(lu.columns) == ['PLC', 'Desk_edit', 'MODULE']

    def test_load_tote_lookup(self):
        lu = feat.load_tote_lookup()
        assert list(lu.columns) == ['Area', 'Tote Colour', 'Loop', 'Suffix',
                                    'Number', 'Asset Code']

    def test_load_ID_lookup(self):
        lu = feat.load_ID_lookup()
        assert list(lu.columns) == ['Fault ID', '0 Merger', 'Alert Type']

    def test_load_PTT_lookup(self):
        lu = feat.load_PTT_lookup()
        assert list(lu.columns) == ['Asset Code', 'Pick Station']

    def test_preprocess_at(self):

        at = pd.DataFrame({'ID': [1, 5, 7, 11, 20],
                           'MODULE_ASSIGNED': ['SCS01', 'SCS05', 'SCS07',
                                               'SCS11', 'SCS20'],
                           'TOTES': ['42', '30', '21', '55', '90'],
                           'DAY': ['9', '10', '11', '12', '13'],
                           'MONTH': ['01', '01', '01', '01', '01'],
                           'YEAR': ['2021', '2021', '2021', '2021',
                                    '2021'],
                           'HOUR': ['08', '08', '08', '08', '08'],
                           'MINUTE': ['30', '30', '30', '30', '30']})
        at_processed = feat.pre_process_at(at)
        at_expected = pd.DataFrame({'Module': [1, 5, 7, 11, 20],
                                    'TOTES': ['42', '30', '21', '55', '90'],
                                    'timestamp': pd.to_datetime([
                                        '2021-01-09 08:30:00',
                                        '2021-01-10 08:30:00',
                                        '2021-01-11 08:30:00',
                                        '2021-01-12 08:30:00',
                                        '2021-01-13 08:30:00']),
                                    'Quadrant': [1, 1, 2, 3, 4]})

        assert at_processed.equals(at_expected)

    def test_preprocess_av(self):
        av = pd.DataFrame({'timestamp': ['2021-01-09 08:00:00',
                                         '2021-01-10 08:00:00',
                                         '2021-01-11 08:00:00',
                                         '2021-01-12 08:00:00',
                                         '2021-01-13 08:00:00'],
                           'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                            'PTT112', 'PTT202'],
                           'Availability': [0.9, 0.8, 0.75, 0.3, 0.1]})
        av_processed = feat.pre_process_av(av)
        av_expected = pd.DataFrame({'timestamp': pd.to_datetime(['2021-01-09 08:00:00',
                                         '2021-01-10 08:00:00',
                                         '2021-01-11 08:00:00',
                                         '2021-01-12 08:00:00',
                                         '2021-01-13 08:00:00']),
                           'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                            'PTT112', 'PTT202'],
                           'Availability': [0.9, 0.8, 0.75, 0.3, 0.1],
                           'Quadrant': [1, 1, 2, 3, 4],
                           'Module': np.array([1,5,7,11,20], dtype=np.int32)})
        assert av_processed.equals(av_expected)

    def test_add_code(self):
        fa = pd.DataFrame({'Number': ['1','2','3','4','5',
                                    '6','7','8','9','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1404STA164 164D702 scanner / data tracking fault',
                                    'C07: C0702STA074 074D702 scanner / data tracking fault',
                                    'C08: C0803STA102 102D702 scanner / data tracking fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-11 08:11:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C08','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P04','P02','P03','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:01',
                                         '0.00:00:03'],
                            'Fault ID': ['5105','3611','3416','3416','3416',
                                    '5416','3504','3504','3504','3419']})

        fa_processed = feat.add_code(fa)
        fa_expected = pd.DataFrame({'Number': ['1','2','3','4','5',
                                    '6','7','8','9','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1404STA164 164D702 scanner / data tracking fault',
                                    'C07: C0702STA074 074D702 scanner / data tracking fault',
                                    'C08: C0803STA102 102D702 scanner / data tracking fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-11 08:11:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C08','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P04','P02','P03','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:01',
                                         '0.00:00:03'],
                            'Fault ID': ['5105','3611','3416','3416','3416',
                                    '5416','3504','3504','3504','3419'],
                            'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                          'C2301RDC176','SCSM20','C1404STA164','C0702STA074',
                                          'C0803STA102','C1002STA081']})

        assert fa_processed.equals(fa_expected)

    def test_add_tote_colour(self):
        fa = pd.DataFrame({'Number': ['1','2','3','4','5',
                                '6','7','8','9','10'],
                        'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                'C05: C05PTT011_ external unit fault',
                                'C16: C1603STA253 253B12 occupancy sensor fault',
                                'C15: C1502RDC070 070B11 occupancy sensor fault',
                                'C23: C2301RDC176 176B14 occupancy sensor fault',
                                'SCS M20: single module 1 emergency stop unit     [24.0]',
                                'C14: C1404STA164 164D702 scanner / data tracking fault',
                                'C07: C0702STA074 074D702 scanner / data tracking fault',
                                'C08: C0803STA102 102D702 scanner / data tracking fault',
                                'C10: C1002STA081 081B15 clearance sensor fault'],
                        'Entry Time': ['2021-01-12 08:12:00',
                                        '2021-01-09 08:56:00',
                                        '2021-01-11 08:34:00',
                                        '2021-01-09 08:20:00',
                                        '2021-01-10 07:59:00',
                                        '2021-01-13 08:14:00',
                                        '2021-01-13 08:46:00',
                                        '2021-01-10 08:49:00',
                                        '2021-01-11 08:11:00',
                                        '2021-01-12 08:01:00'],
                        'PLC': ['SCSM11','C05','C16','C15','C23',
                                'SCSM20','C14','C07','C08','C10'],
                        'Desk': ['SCS116','Z','P03','P02','P01',
                                'SCSM20','P04','P02','P03','P02'],
                        'Duration': ['0.00:00:30',
                                        '0.00:05:30',
                                        '0.00:07:20',
                                        '0.00:15:30',
                                        '0.00:31:30',
                                        '0.01:12:30',
                                        '0.00:00:05',
                                        '0.00:00:07',
                                        '0.00:00:01',
                                        '0.00:00:03'],
                        'Fault ID': ['5105','3611','3416','3416','3416',
                                '5416','3504','3504','3504','3419'],
                        'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                        'C2301RDC176','SCSM20','C1404STA164','C0702STA074',
                                        'C0803STA102','C1002STA081']})

        fa_processed,unmapped = feat.add_tote_colour(fa)

        fa_expected = pd.DataFrame({'Number': ['1','2','3','4','5',
                                '6','7','8','9','10'],
                        'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                'C05: C05PTT011_ external unit fault',
                                'C16: C1603STA253 253B12 occupancy sensor fault',
                                'C15: C1502RDC070 070B11 occupancy sensor fault',
                                'C23: C2301RDC176 176B14 occupancy sensor fault',
                                'SCS M20: single module 1 emergency stop unit     [24.0]',
                                'C14: C1404STA164 164D702 scanner / data tracking fault',
                                'C07: C0702STA074 074D702 scanner / data tracking fault',
                                'C08: C0803STA102 102D702 scanner / data tracking fault',
                                'C10: C1002STA081 081B15 clearance sensor fault'],
                        'Entry Time': ['2021-01-12 08:12:00',
                                        '2021-01-09 08:56:00',
                                        '2021-01-11 08:34:00',
                                        '2021-01-09 08:20:00',
                                        '2021-01-10 07:59:00',
                                        '2021-01-13 08:14:00',
                                        '2021-01-13 08:46:00',
                                        '2021-01-10 08:49:00',
                                        '2021-01-11 08:11:00',
                                        '2021-01-12 08:01:00'],
                        'PLC': ['SCSM11','C05','C16','C15','C23',
                                'SCSM20','C14','C07','C08','C10'],
                        'Desk': ['SCS116','Z','P03','P02','P01',
                                'SCSM20','P04','P02','P03','P02'],
                        'Duration': ['0.00:00:30',
                                        '0.00:05:30',
                                        '0.00:07:20',
                                        '0.00:15:30',
                                        '0.00:31:30',
                                        '0.01:12:30',
                                        '0.00:00:05',
                                        '0.00:00:07',
                                        '0.00:00:01',
                                        '0.00:00:03'],
                        'Fault ID': ['5105','3611','3416','3416','3416',
                                '5416','3504','3504','3504','3419'],
                        'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                        'C2301RDC176','SCSM20','C1404STA164','C0702STA074',
                                        'C0803STA102','C1002STA081'],
                        'Area': ['Carousel','PTT','C16','C15',
                                        'C23','Carousel','Module Loop Grey','Module Loop Grey',
                                        'Quadrant Loop Blue','Module Loop Grey'],
                        'Tote Colour': ['Grey','Both','Blue','Blue',
                                        'Blue','Grey','Grey','Grey',
                                        'Blue','Grey'],
                        'Loop': ['carousel',np.NaN,'Outside','Outside',
                                        'Outside','carousel','Module','Module',
                                        'Quadrant','Module'],
                        'Suffix': ['SCSM11',np.NaN,'C1603','C1502',
                                        'C2301','SCSM20','C1404','C0702',
                                        'C0803','C1002'],
                        'Pick Station': [False,'PTT011',False,False,
                                        False,False,False,False,
                                        False,False],
                        'PLCN': np.array([0,5,16,15,23,0,14,7,8,10],dtype=np.int32)})

        assert fa_processed.equals(fa_expected) and unmapped.empty

    def test_preprocess_fa(self):
        fa = pd.DataFrame({'Number': ['1','2','3','4','5',
                                    '6','7','8','9','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1402STA049 049B14 clearance sensor fault',
                                    'C07: C0702STA049 049B14 clearance sensor fault',
                                    'C08: C0803STA102 102D702 scanner / data tracking fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-11 08:11:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C08','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P02','P02','P03','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:01',
                                         '0.00:00:03'],
                            'Fault ID': [5105,3611,3416,3416,3416,
                                    5416,3419,3419,3504,3419]})    

        fa_processed,unmapped = feat.pre_process_fa(fa)

        fa_expected = pd.DataFrame({'Alert ID': [0.0,1.0,2.0,3.0,4.0,
                            5.0,6.0,7.0,9.0],
                    'Number': ['1','2','3','4','5',
                            '6','7','8','10'],
                   'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                            'C05: C05PTT011_ external unit fault',
                            'C16: C1603STA253 253B12 occupancy sensor fault',
                            'C15: C1502RDC070 070B11 occupancy sensor fault',
                            'C23: C2301RDC176 176B14 occupancy sensor fault',
                            'SCS M20: single module 1 emergency stop unit     [24.0]',
                            'C14: C1402STA049 049B14 clearance sensor fault',
                            'C07: C0702STA049 049B14 clearance sensor fault',
                            'C10: C1002STA081 081B15 clearance sensor fault'],
                    'timestamp': pd.to_datetime(['2021-01-12 08:12:00',
                                 '2021-01-09 08:56:00',
                                 '2021-01-11 08:34:00',
                                 '2021-01-09 08:20:00',
                                 '2021-01-10 07:59:00',
                                 '2021-01-13 08:14:00',
                                 '2021-01-13 08:46:00',
                                 '2021-01-10 08:49:00',
                                 '2021-01-12 08:01:00'],dayfirst=True),
                    'PLC': ['SCSM11','C05','C16','C15','C23',
                            'SCSM20','C14','C07','C10'],
                    'Desk': ['SCS116','Z','P03','P02','P01',
                            'SCSM20','P02','P02','P02'],
                    'Duration': [30.000000000000004,330.0,440.0,930.0000000000001,1890.0000000000002,4350.0,
                                 5.0,7.0,3.0],
                    'Fault ID': [5105,3611,3416,3416,3416,
                            5416,3419,3419,3419],
                    'Asset Code': ['SCS116','C05PTT011','C1603STA253','C1502RDC070',
                                'C2301RDC176','SCSM20','C1402STA049','C0702STA049',
                                'C1002STA081'],
                    'Area': ['Carousel','PTT','C16','C15',
                                    'C23','Carousel','Module Loop Blue','Module Loop Blue',
                                    'Module Loop Grey'],
                    'Tote Colour': ['Grey','Both','Blue','Blue',
                                    'Blue','Grey','Blue','Blue',
                                    'Grey'],
                    'Loop': ['carousel',np.NaN,'Outside','Outside',
                                    'Outside','carousel','Module','Module',
                                    'Module'],
                    'Suffix': ['SCSM11',np.NaN,'C1603','C1502',
                                    'C2301','SCSM20','C1402','C0702',
                                    'C1002'],
                    'Pick Station': [False,'PTT011',False,False,
                                    False,False,False,False,
                                    False],
                    'PLCN': [0.0,5.0,16.0,15.0,23.0,0.0,14.0,7.0,10.0],
                    'Quadrant': [3.0,1.0,0.0,0.0,0.0,4.0,4.0,1.0,3.0],
                    'MODULE': ['11','1',np.NaN,np.NaN,np.NaN,'20','19','4','11'],
                    'Alert Type': ['Fault','Fault','Fault','Fault','Fault',
                                    'Fault','Fault','Fault','Fault']
                    })
        assert fa_processed.equals(fa_expected.sort_values('Duration')) and unmapped.empty

    def test_floor_shift_time_fa(self):
        fa = pd.DataFrame({'Alert ID': [0.0,1.0,2.0,3.0,4.0,
                            5.0,6.0,7.0,9.0],
                    'Number': ['1','2','3','4','5',
                            '6','7','8','10'],
                   'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                            'C05: C05PTT011_ external unit fault',
                            'C16: C1603STA253 253B12 occupancy sensor fault',
                            'C15: C1502RDC070 070B11 occupancy sensor fault',
                            'C23: C2301RDC176 176B14 occupancy sensor fault',
                            'SCS M20: single module 1 emergency stop unit     [24.0]',
                            'C14: C1402STA049 049B14 clearance sensor fault',
                            'C07: C0702STA049 049B14 clearance sensor fault',
                            'C10: C1002STA081 081B15 clearance sensor fault'],
                    'timestamp': pd.to_datetime(['2021-01-12 08:12:00',
                                 '2021-01-09 08:56:00',
                                 '2021-01-11 08:34:00',
                                 '2021-01-09 08:20:00',
                                 '2021-01-10 07:59:00',
                                 '2021-01-13 08:14:00',
                                 '2021-01-13 08:46:00',
                                 '2021-01-10 08:49:00',
                                 '2021-01-12 08:01:00'],dayfirst=True),
                    'PLC': ['SCSM11','C05','C16','C15','C23',
                            'SCSM20','C14','C07','C10'],
                    'Desk': ['SCS116','Z','P03','P02','P01',
                            'SCSM20','P02','P02','P02'],
                    'Duration': [30.000000000000004,330.0,440.0,930.0000000000001,1890.0000000000002,4350.0,
                                 5.0,7.0,3.0],
                    'Fault ID': [5105,3611,3416,3416,3416,
                            5416,3419,3419,3419],
                    'Asset Code': ['SCS116','C05PTT011','C1603STA253','C1502RDC070',
                                'C2301RDC176','SCSM20','C1402STA049','C0702STA049',
                                'C1002STA081'],
                    'Area': ['Carousel','PTT','C16','C15',
                                    'C23','Carousel','Module Loop Blue','Module Loop Blue',
                                    'Module Loop Grey'],
                    'Tote Colour': ['Grey','Both','Blue','Blue',
                                    'Blue','Grey','Blue','Blue',
                                    'Grey'],
                    'Loop': ['carousel',np.NaN,'Outside','Outside',
                                    'Outside','carousel','Module','Module',
                                    'Module'],
                    'Suffix': ['SCSM11',np.NaN,'C1603','C1502',
                                    'C2301','SCSM20','C1402','C0702',
                                    'C1002'],
                    'Pick Station': [False,'PTT011',False,False,
                                    False,False,False,False,
                                    False],
                    'PLCN': [0.0,5.0,16.0,15.0,23.0,0.0,14.0,7.0,10.0],
                    'Quadrant': [3.0,1.0,0.0,0.0,0.0,4.0,4.0,1.0,3.0],
                    'MODULE': ['11','1',np.NaN,np.NaN,np.NaN,'20','19','4','11'],
                    'Alert Type': ['Fault','Fault','Fault','Fault','Fault',
                                    'Fault','Fault','Fault','Fault']
                    })   

        fa_processed = feat.floor_shift_time_fa(fa)

        fa_expected = pd.DataFrame({'Alert ID': {0: 3.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 4.0,
                                                4: 4.0,
                                                5: 7.0,
                                                6: 2.0,
                                                7: 0.0,
                                                8: 9.0,
                                                9: 5.0,
                                                10: 6.0,
                                                11: 5.0},
                                    'Number': {0: '4',
                                                1: '2',
                                                2: '2',
                                                3: '5',
                                                4: '5',
                                                5: '8',
                                                6: '3',
                                                7: '1',
                                                8: '10',
                                                9: '6',
                                                10: '7',
                                                11: '6'},
                                    'Alert': {0: 'C15: C1502RDC070 070B11 occupancy sensor fault',
                                                1: 'C05: C05PTT011_ external unit fault',
                                                2: 'C05: C05PTT011_ external unit fault',
                                                3: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                4: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                5: 'C07: C0702STA049 049B14 clearance sensor fault',
                                                6: 'C16: C1603STA253 253B12 occupancy sensor fault',
                                                7: 'SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                                8: 'C10: C1002STA081 081B15 clearance sensor fault',
                                                9: 'SCS M20: single module 1 emergency stop unit     [24.0]',
                                                10: 'C14: C1402STA049 049B14 clearance sensor fault',
                                                11: 'SCS M20: single module 1 emergency stop unit     [24.0]'},
                                    'timestamp': dict(zip(np.arange(12),
                                                pd.to_datetime(['2021-01-09 08:00:00',
                                                '2021-01-09 08:00:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:00:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-11 08:00:00',
                                                '2021-01-12 08:00:00',
                                                '2021-01-12 08:00:00',
                                                '2021-01-13 08:00:00',
                                                '2021-01-13 08:00:00',
                                                '2021-01-13 09:00:00'])
                                                )),
                                    'PLC': {0: 'C15',
                                                1: 'C05',
                                                2: 'C05',
                                                3: 'C23',
                                                4: 'C23',
                                                5: 'C07',
                                                6: 'C16',
                                                7: 'SCSM11',
                                                8: 'C10',
                                                9: 'SCSM20',
                                                10: 'C14',
                                                11: 'SCSM20'},
                                                'Desk': {0: 'P02',
                                                1: 'Z',
                                                2: 'Z',
                                                3: 'P01',
                                                4: 'P01',
                                                5: 'P02',
                                                6: 'P03',
                                                7: 'SCS116',
                                                8: 'P02',
                                                9: 'SCSM20',
                                                10: 'P02',
                                                11: 'SCSM20'},
                                    'Duration': {0: 7.835184586147302,
                                                1: 6.480638923341991,
                                                2: 5.499809670330265,
                                                3: 5.0943445622221,
                                                4: 8.512071245835466,
                                                5: 2.9459101490553135,
                                                6: 7.0867747269123065,
                                                7: 4.401197381662156,
                                                8: 2.09861228866811,
                                                9: 8.922985958711195,
                                                10: 2.6094379124341005,
                                                11: 8.371489295214278},
                                    'Fault ID': {0: 3416,
                                                1: 3611,
                                                2: 3611,
                                                3: 3416,
                                                4: 3416,
                                                5: 3419,
                                                6: 3416,
                                                7: 5105,
                                                8: 3419,
                                                9: 5416,
                                                10: 3419,
                                                11: 5416},
                                    'Asset Code': {0: 'C1502RDC070',
                                                1: 'C05PTT011',
                                                2: 'C05PTT011',
                                                3: 'C2301RDC176',
                                                4: 'C2301RDC176',
                                                5: 'C0702STA049',
                                                6: 'C1603STA253',
                                                7: 'SCS116',
                                                8: 'C1002STA081',
                                                9: 'SCSM20',
                                                10: 'C1402STA049',
                                                11: 'SCSM20'},
                                    'Area': {0: 'C15',
                                                1: 'PTT',
                                                2: 'PTT',
                                                3: 'C23',
                                                4: 'C23',
                                                5: 'Module Loop Blue',
                                                6: 'C16',
                                                7: 'Carousel',
                                                8: 'Module Loop Grey',
                                                9: 'Carousel',
                                                10: 'Module Loop Blue',
                                                11: 'Carousel'},
                                    'Tote Colour': {0: 'Blue',
                                                1: 'Both',
                                                2: 'Both',
                                                3: 'Blue',
                                                4: 'Blue',
                                                5: 'Blue',
                                                6: 'Blue',
                                                7: 'Grey',
                                                8: 'Grey',
                                                9: 'Grey',
                                                10: 'Blue',
                                                11: 'Grey'},
                                    'Loop': {0: 'Outside',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'Outside',
                                                4: 'Outside',
                                                5: 'Module',
                                                6: 'Outside',
                                                7: 'carousel',
                                                8: 'Module',
                                                9: 'carousel',
                                                10: 'Module',
                                                11: 'carousel'},
                                    'Suffix': {0: 'C1502',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'C2301',
                                                4: 'C2301',
                                                5: 'C0702',
                                                6: 'C1603',
                                                7: 'SCSM11',
                                                8: 'C1002',
                                                9: 'SCSM20',
                                                10: 'C1402',
                                                11: 'SCSM20'},
                                    'Pick Station': {0: False,
                                                1: 'PTT011',
                                                2: 'PTT011',
                                                3: False,
                                                4: False,
                                                5: False,
                                                6: False,
                                                7: False,
                                                8: False,
                                                9: False,
                                                10: False,
                                                11: False},
                                    'PLCN': {0: 15.0,
                                                1: 5.0,
                                                2: 5.0,
                                                3: 23.0,
                                                4: 23.0,
                                                5: 7.0,
                                                6: 16.0,
                                                7: 0.0,
                                                8: 10.0,
                                                9: 0.0,
                                                10: 14.0,
                                                11: 0.0},
                                    'Quadrant': {0: 0.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 0.0,
                                                4: 0.0,
                                                5: 1.0,
                                                6: 0.0,
                                                7: 3.0,
                                                8: 3.0,
                                                9: 4.0,
                                                10: 4.0,
                                                11: 4.0},
                                    'MODULE': {0: np.NaN,
                                                1: '1',
                                                2: '1',
                                                3: np.NaN,
                                                4: np.NaN,
                                                5: '4',
                                                6: np.NaN,
                                                7: '11',
                                                8: '11',
                                                9: '20',
                                                10: '19',
                                                11: '20'},
                                    'Alert Type': {0: 'Fault',
                                                1: 'Fault',
                                                2: 'Fault',
                                                3: 'Fault',
                                                4: 'Fault',
                                                5: 'Fault',
                                                6: 'Fault',
                                                7: 'Fault',
                                                8: 'Fault',
                                                9: 'Fault',
                                                10: 'Fault',
                                                11: 'Fault'},
                                    'Entry Time': dict(zip(np.arange(12),
                                                pd.to_datetime(['2021-01-09 08:20:00',
                                                '2021-01-09 08:56:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:59:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:49:00',
                                                '2021-01-11 08:34:00',
                                                '2021-01-12 08:12:00',
                                                '2021-01-12 08:01:00',
                                                '2021-01-13 08:14:00',
                                                '2021-01-13 08:46:00',
                                                '2021-01-13 09:00:00'],
                                                ))),
                                    'End Time': dict(zip(np.arange(12),
                                                pd.to_datetime(['2021-01-09 08:35:30',
                                                '2021-01-09 09:00:00',
                                                '2021-01-09 09:01:30',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:30:30',
                                                '2021-01-10 08:49:07',
                                                '2021-01-11 08:41:20',
                                                '2021-01-12 08:12:30',
                                                '2021-01-12 08:01:03',
                                                '2021-01-13 09:00:00',
                                                '2021-01-13 08:46:05',
                                                '2021-01-13 09:26:30'])))
                                                })
        assert fa_processed.equals(fa_expected)

    def test_fault_select(self):

        PTT = 'PTT011'
        mod = 1
        fa_floor = pd.DataFrame({'Alert ID': {0: 3.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 4.0,
                                                4: 4.0,
                                                5: 7.0,
                                                6: 2.0,
                                                7: 0.0,
                                                8: 9.0,
                                                9: 5.0,
                                                10: 6.0,
                                                11: 5.0},
                                    'Number': {0: '4',
                                                1: '2',
                                                2: '2',
                                                3: '5',
                                                4: '5',
                                                5: '8',
                                                6: '3',
                                                7: '1',
                                                8: '10',
                                                9: '6',
                                                10: '7',
                                                11: '6'},
                                    'Alert': {0: 'C15: C1502RDC070 070B11 occupancy sensor fault',
                                                1: 'C05: C05PTT011_ external unit fault',
                                                2: 'C05: C05PTT011_ external unit fault',
                                                3: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                4: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                5: 'C07: C0702STA049 049B14 clearance sensor fault',
                                                6: 'C16: C1603STA253 253B12 occupancy sensor fault',
                                                7: 'SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                                8: 'C10: C1002STA081 081B15 clearance sensor fault',
                                                9: 'SCS M20: single module 1 emergency stop unit     [24.0]',
                                                10: 'C14: C1402STA049 049B14 clearance sensor fault',
                                                11: 'SCS M20: single module 1 emergency stop unit     [24.0]'},
                                    'timestamp': dict(zip(np.arange(12),
                                                pd.to_datetime(['2021-01-09 08:00:00',
                                                '2021-01-09 08:00:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:00:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-11 08:00:00',
                                                '2021-01-12 08:00:00',
                                                '2021-01-12 08:00:00',
                                                '2021-01-13 08:00:00',
                                                '2021-01-13 08:00:00',
                                                '2021-01-13 09:00:00'])
                                                )),
                                    'PLC': {0: 'C15',
                                                1: 'C05',
                                                2: 'C05',
                                                3: 'C23',
                                                4: 'C23',
                                                5: 'C07',
                                                6: 'C16',
                                                7: 'SCSM11',
                                                8: 'C10',
                                                9: 'SCSM20',
                                                10: 'C14',
                                                11: 'SCSM20'},
                                                'Desk': {0: 'P02',
                                                1: 'Z',
                                                2: 'Z',
                                                3: 'P01',
                                                4: 'P01',
                                                5: 'P02',
                                                6: 'P03',
                                                7: 'SCS116',
                                                8: 'P02',
                                                9: 'SCSM20',
                                                10: 'P02',
                                                11: 'SCSM20'},
                                    'Duration': {0: 7.835184586147302,
                                                1: 6.480638923341991,
                                                2: 5.499809670330265,
                                                3: 5.0943445622221,
                                                4: 8.512071245835466,
                                                5: 2.9459101490553135,
                                                6: 7.0867747269123065,
                                                7: 4.401197381662156,
                                                8: 2.09861228866811,
                                                9: 8.922985958711195,
                                                10: 2.6094379124341005,
                                                11: 8.371489295214278},
                                    'Fault ID': {0: 3416,
                                                1: 3611,
                                                2: 3611,
                                                3: 3416,
                                                4: 3416,
                                                5: 3419,
                                                6: 3416,
                                                7: 5105,
                                                8: 3419,
                                                9: 5416,
                                                10: 3419,
                                                11: 5416},
                                    'Asset Code': {0: 'C1502RDC070',
                                                1: 'C05PTT011',
                                                2: 'C05PTT011',
                                                3: 'C2301RDC176',
                                                4: 'C2301RDC176',
                                                5: 'C0702STA049',
                                                6: 'C1603STA253',
                                                7: 'SCS116',
                                                8: 'C1002STA081',
                                                9: 'SCSM20',
                                                10: 'C1402STA049',
                                                11: 'SCSM20'},
                                    'Area': {0: 'C15',
                                                1: 'PTT',
                                                2: 'PTT',
                                                3: 'C23',
                                                4: 'C23',
                                                5: 'Module Loop Blue',
                                                6: 'C16',
                                                7: 'Carousel',
                                                8: 'Module Loop Grey',
                                                9: 'Carousel',
                                                10: 'Module Loop Blue',
                                                11: 'Carousel'},
                                    'Tote Colour': {0: 'Blue',
                                                1: 'Both',
                                                2: 'Both',
                                                3: 'Blue',
                                                4: 'Blue',
                                                5: 'Blue',
                                                6: 'Blue',
                                                7: 'Grey',
                                                8: 'Grey',
                                                9: 'Grey',
                                                10: 'Blue',
                                                11: 'Grey'},
                                    'Loop': {0: 'Outside',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'Outside',
                                                4: 'Outside',
                                                5: 'Module',
                                                6: 'Outside',
                                                7: 'carousel',
                                                8: 'Module',
                                                9: 'carousel',
                                                10: 'Module',
                                                11: 'carousel'},
                                    'Suffix': {0: 'C1502',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'C2301',
                                                4: 'C2301',
                                                5: 'C0702',
                                                6: 'C1603',
                                                7: 'SCSM11',
                                                8: 'C1002',
                                                9: 'SCSM20',
                                                10: 'C1402',
                                                11: 'SCSM20'},
                                    'Pick Station': {0: False,
                                                1: 'PTT011',
                                                2: 'PTT011',
                                                3: False,
                                                4: False,
                                                5: False,
                                                6: False,
                                                7: False,
                                                8: False,
                                                9: False,
                                                10: False,
                                                11: False},
                                    'PLCN': {0: 15.0,
                                                1: 5.0,
                                                2: 5.0,
                                                3: 23.0,
                                                4: 23.0,
                                                5: 7.0,
                                                6: 16.0,
                                                7: 0.0,
                                                8: 10.0,
                                                9: 0.0,
                                                10: 14.0,
                                                11: 0.0},
                                    'Quadrant': {0: 0.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 0.0,
                                                4: 0.0,
                                                5: 1.0,
                                                6: 0.0,
                                                7: 3.0,
                                                8: 3.0,
                                                9: 4.0,
                                                10: 4.0,
                                                11: 4.0},
                                    'MODULE': {0: np.NaN,
                                                1: '1',
                                                2: '1',
                                                3: np.NaN,
                                                4: np.NaN,
                                                5: '4',
                                                6: np.NaN,
                                                7: '11',
                                                8: '11',
                                                9: '20',
                                                10: '19',
                                                11: '20'},
                                    'Alert Type': {0: 'Fault',
                                                1: 'Fault',
                                                2: 'Fault',
                                                3: 'Fault',
                                                4: 'Fault',
                                                5: 'Fault',
                                                6: 'Fault',
                                                7: 'Fault',
                                                8: 'Fault',
                                                9: 'Fault',
                                                10: 'Fault',
                                                11: 'Fault'},
                                    'Entry Time': dict(zip(np.arange(12),
                                                pd.to_datetime(['2021-01-09 08:20:00',
                                                '2021-01-09 08:56:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:59:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:49:00',
                                                '2021-01-11 08:34:00',
                                                '2021-01-12 08:12:00',
                                                '2021-01-12 08:01:00',
                                                '2021-01-13 08:14:00',
                                                '2021-01-13 08:46:00',
                                                '2021-01-13 09:00:00'],
                                                ))),
                                    'End Time': dict(zip(np.arange(12),
                                                pd.to_datetime(['2021-01-09 08:35:30',
                                                '2021-01-09 09:00:00',
                                                '2021-01-09 09:01:30',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:30:30',
                                                '2021-01-10 08:49:07',
                                                '2021-01-11 08:41:20',
                                                '2021-01-12 08:12:30',
                                                '2021-01-12 08:01:03',
                                                '2021-01-13 09:00:00',
                                                '2021-01-13 08:46:05',
                                                '2021-01-13 09:26:30'])))
                                                })

        fa_sel = feat.fault_select(fa_floor, modules=[mod],PTT = PTT) 

        fa_expected = pd.DataFrame({'Alert ID': {0: 3.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 4.0,
                                                4: 4.0,
                                                6: 2.0},
                                    'Number': {0: '4',
                                                1: '2',
                                                2: '2',
                                                3: '5',
                                                4: '5',
                                                6: '3'},
                                    'Alert': {0: 'C15: C1502RDC070 070B11 occupancy sensor fault',
                                                1: 'C05: C05PTT011_ external unit fault',
                                                2: 'C05: C05PTT011_ external unit fault',
                                                3: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                4: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                6: 'C16: C1603STA253 253B12 occupancy sensor fault'},
                                    'timestamp': dict(zip([0,1,2,3,4,6],
                                                pd.to_datetime(['2021-01-09 08:00:00',
                                                '2021-01-09 08:00:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:00:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-11 08:00:00']))),
                                    'PLC': {0: 'C15',
                                                1: 'C05',
                                                2: 'C05',
                                                3: 'C23',
                                                4: 'C23',
                                                6: 'C16'},
                                                'Desk': {0: 'P02',
                                                1: 'Z',
                                                2: 'Z',
                                                3: 'P01',
                                                4: 'P01',
                                                6: 'P03'},
                                    'Duration': {0: 7.835184586147302,
                                                1: 6.480638923341991,
                                                2: 5.499809670330265,
                                                3: 5.0943445622221,
                                                4: 8.512071245835466,
                                                6: 7.0867747269123065},
                                    'Fault ID': {0: 3416.0,
                                                1: 3611.0,
                                                2: 3611.0,
                                                3: 3416.0,
                                                4: 3416.0,
                                                6: 3416.0},
                                    'Asset Code': {0: 'C1502RDC070',
                                                1: 'C05PTT011',
                                                2: 'C05PTT011',
                                                3: 'C2301RDC176',
                                                4: 'C2301RDC176',
                                                6: 'C1603STA253'},
                                    'Area': {0: 'C15',
                                                1: 'PTT',
                                                2: 'PTT',
                                                3: 'C23',
                                                4: 'C23',
                                                6: 'C16'},
                                    'Tote Colour': {0: 'Blue',
                                                1: 'Both',
                                                2: 'Both',
                                                3: 'Blue',
                                                4: 'Blue',
                                                6: 'Blue'},
                                    'Loop': {0: 'Outside',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'Outside',
                                                4: 'Outside',
                                                6: 'Outside'},
                                    'Suffix': {0: 'C1502',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'C2301',
                                                4: 'C2301',
                                                6: 'C1603'},
                                    'PLCN': {0: 15.0,
                                                1: 5.0,
                                                2: 5.0,
                                                3: 23.0,
                                                4: 23.0,
                                                6: 16.0},
                                    'Quadrant': {0: 0.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 0.0,
                                                4: 0.0,
                                                6: 0.0},
                                    'MODULE': {0: np.NaN,
                                                1: '1',
                                                2: '1',
                                                3: np.NaN,
                                                4: np.NaN,
                                                6: np.NaN},
                                    'Alert Type': {0: 'Fault',
                                                1: 'Fault',
                                                2: 'Fault',
                                                3: 'Fault',
                                                4: 'Fault',
                                                6: 'Fault'},
                                    'Entry Time': dict(zip([0,1,2,3,4,6],
                                                pd.to_datetime(['2021-01-09 08:20:00',
                                                '2021-01-09 08:56:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:59:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-11 08:34:00'],
                                                ))),
                                    'End Time': dict(zip([0,1,2,3,4,6],
                                                pd.to_datetime(['2021-01-09 08:35:30',
                                                '2021-01-09 09:00:00',
                                                '2021-01-09 09:01:30',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:30:30',
                                                '2021-01-11 08:41:20']))),
                                    'Pick Station': {0: False,
                                                1: 'PTT011',
                                                2: 'PTT011',
                                                3: False,
                                                4: False,
                                                6: False},
                                                })
        assert fa_sel.sort_index().equals(fa_expected)

    def test_faults_aggregate(self):

        fa = pd.DataFrame({'Alert ID': {0: 3.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 4.0,
                                                4: 4.0,
                                                6: 2.0},
                                    'Number': {0: '4',
                                                1: '2',
                                                2: '2',
                                                3: '5',
                                                4: '5',
                                                6: '3'},
                                    'Alert': {0: 'C15: C1502RDC070 070B11 occupancy sensor fault',
                                                1: 'C05: C05PTT011_ external unit fault',
                                                2: 'C05: C05PTT011_ external unit fault',
                                                3: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                4: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                                6: 'C16: C1603STA253 253B12 occupancy sensor fault'},
                                    'timestamp': dict(zip([0,1,2,3,4,6],
                                                pd.to_datetime(['2021-01-09 08:00:00',
                                                '2021-01-09 08:00:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:00:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-11 08:00:00']))),
                                    'PLC': {0: 'C15',
                                                1: 'C05',
                                                2: 'C05',
                                                3: 'C23',
                                                4: 'C23',
                                                6: 'C16'},
                                                'Desk': {0: 'P02',
                                                1: 'Z',
                                                2: 'Z',
                                                3: 'P01',
                                                4: 'P01',
                                                6: 'P03'},
                                    'Duration': {0: 7.835184586147302,
                                                1: 6.480638923341991,
                                                2: 5.499809670330265,
                                                3: 5.0943445622221,
                                                4: 8.512071245835466,
                                                6: 7.0867747269123065},
                                    'Fault ID': {0: 3416.0,
                                                1: 3611.0,
                                                2: 3611.0,
                                                3: 3416.0,
                                                4: 3416.0,
                                                6: 3416.0},
                                    'Asset Code': {0: 'C1502RDC070',
                                                1: 'C05PTT011',
                                                2: 'C05PTT011',
                                                3: 'C2301RDC176',
                                                4: 'C2301RDC176',
                                                6: 'C1603STA253'},
                                    'Area': {0: 'C15',
                                                1: 'PTT',
                                                2: 'PTT',
                                                3: 'C23',
                                                4: 'C23',
                                                6: 'C16'},
                                    'Tote Colour': {0: 'Blue',
                                                1: 'Both',
                                                2: 'Both',
                                                3: 'Blue',
                                                4: 'Blue',
                                                6: 'Blue'},
                                    'Loop': {0: 'Outside',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'Outside',
                                                4: 'Outside',
                                                6: 'Outside'},
                                    'Suffix': {0: 'C1502',
                                                1: np.NaN,
                                                2: np.NaN,
                                                3: 'C2301',
                                                4: 'C2301',
                                                6: 'C1603'},
                                    'PLCN': {0: 15.0,
                                                1: 5.0,
                                                2: 5.0,
                                                3: 23.0,
                                                4: 23.0,
                                                6: 16.0},
                                    'Quadrant': {0: 0.0,
                                                1: 1.0,
                                                2: 1.0,
                                                3: 0.0,
                                                4: 0.0,
                                                6: 0.0},
                                    'MODULE': {0: np.NaN,
                                                1: '1',
                                                2: '1',
                                                3: np.NaN,
                                                4: np.NaN,
                                                6: np.NaN},
                                    'Alert Type': {0: 'Fault',
                                                1: 'Fault',
                                                2: 'Fault',
                                                3: 'Fault',
                                                4: 'Fault',
                                                6: 'Fault'},
                                    'Entry Time': dict(zip([0,1,2,3,4,6],
                                                pd.to_datetime(['2021-01-09 08:20:00',
                                                '2021-01-09 08:56:00',
                                                '2021-01-09 09:00:00',
                                                '2021-01-10 07:59:00',
                                                '2021-01-10 08:00:00',
                                                '2021-01-11 08:34:00'],
                                                ))),
                                    'End Time': dict(zip([0,1,2,3,4,6],
                                                pd.to_datetime(['2021-01-09 08:35:30',
                                                '2021-01-09 09:00:00',
                                                '2021-01-09 09:01:30',
                                                '2021-01-10 08:00:00',
                                                '2021-01-10 08:30:30',
                                                '2021-01-11 08:41:20']))),
                                    'Pick Station': {0: False,
                                                1: 'PTT011',
                                                2: 'PTT011',
                                                3: False,
                                                4: False,
                                                6: False},
                                                })

        fa_agg = feat.faults_aggregate(fa,fault_agg_level= 'Asset Code') 

        fa_expected = pd.DataFrame({'C05PTT011': {pd.to_datetime('2021-01-09 08:00:00'): 6.480638923341991,
                                        pd.to_datetime('2021-01-09 09:00:00'): 5.499809670330265,
                                        pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                        'C1502RDC070': {pd.to_datetime('2021-01-09 08:00:00'): 7.835184586147302,
                                        pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                        'C1603STA253': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-11 08:00:00'): 7.0867747269123065},
                        'C2301RDC176': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 07:00:00'): 5.0943445622221,
                                        pd.to_datetime('2021-01-10 08:00:00'): 8.512071245835466,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.0}})
        
        assert fa_agg.equals(fa_expected)

    def test_av_at_select(self):

        PTT = 'PTT011'
        at = pd.DataFrame({'Module': [1, 5, 7, 11, 20],
                        'TOTES': [42, 30, 21, 55, 90],
                        'timestamp': pd.to_datetime([
                        '2021-01-09 08:30:00',
                        '2021-01-10 08:30:00',
                        '2021-01-11 08:30:00',
                        '2021-01-12 08:30:00',
                        '2021-01-13 08:30:00']),
                        'Quadrant': [1, 1, 2, 3, 4]}) 

        av = pd.DataFrame({'timestamp': pd.to_datetime(['2021-01-09 08:00:00',
                                                        '2021-01-10 08:00:00',
                                                        '2021-01-11 08:00:00',
                                                        '2021-01-12 08:00:00',
                                                        '2021-01-13 08:00:00']),
                                'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                                        'PTT112', 'PTT202'],
                                'Availability': [0.9, 0.8, 0.75, 0.3, 0.1],
                                'Quadrant': [1, 1, 2, 3, 4],
                                'Module': [1,5,7,11,20]})

        av_sel, at_sel = (
        feat.av_at_select(av, at, availability_select_options={'Pick Station': [PTT]},
                        remove_high_AT=True, AT_limit='None'))

        av_expected = pd.DataFrame({'timestamp': {0: pd.to_datetime('2021-01-09 08:00:00')},
                                    'Pick Station': {0: 'PTT011'},
                                    'Availability': {0: 0.9},
                                    'Quadrant': {0: 1},
                                    'Module': {0: 1}})


        at_expected = pd.DataFrame({'Module': {0: 1},
                                    'TOTES': {0: 42},
                                    'timestamp': {0: pd.to_datetime('2021-01-09 08:30:00')},
                                    'Quadrant': {0: 1}})

        assert  av_sel.equals(av_expected) and at_sel.equals(at_expected)

    def test_aggregate_availability(self):

        agg_level = 'Module'
        av = pd.DataFrame({'timestamp': pd.to_datetime(['2021-01-09 08:00:00',
                                                        '2021-01-10 08:00:00',
                                                        '2021-01-11 08:00:00',
                                                        '2021-01-12 08:00:00',
                                                        '2021-01-13 08:00:00']),
                                'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                                        'PTT112', 'PTT202'],
                                'Availability': [0.9, 0.8, 0.75, 0.3, 0.1],
                                'Quadrant': [1, 1, 2, 3, 4],
                                'Module': [1,5,7,11,20]})

        av_agg = feat.aggregate_availability(av, agg_level=agg_level)

        av_expected = pd.DataFrame({'Module': {pd.to_datetime('2021-01-09 08:00:00'): 1,
                                                pd.to_datetime('2021-01-10 08:00:00'): 5,
                                                pd.to_datetime('2021-01-11 08:00:00'): 7,
                                                pd.to_datetime('2021-01-12 08:00:00'): 11,
                                                pd.to_datetime('2021-01-13 08:00:00'): 20},
                                    'Availability': {pd.to_datetime('2021-01-09 08:00:00'): 0.9,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.8,
                                                pd.to_datetime('2021-01-11 08:00:00'): 0.75,
                                                pd.to_datetime('2021-01-12 08:00:00'): 0.3,
                                                pd.to_datetime('2021-01-13 08:00:00'): 0.1}})

        assert av_expected.equals(av_agg)

    def test_aggregate_totes(self):
        agg_level = 'Module'
        at = pd.DataFrame({'Module': [1, 5, 7, 11, 20],
                        'TOTES': [42, 30, 21, 55, 90],
                        'timestamp': pd.to_datetime([
                        '2021-01-09 08:30:00',
                        '2021-01-10 08:30:00',
                        '2021-01-11 08:30:00',
                        '2021-01-12 08:30:00',
                        '2021-01-13 08:30:00']),
                        'Quadrant': [1, 1, 2, 3, 4]}) 

        at_agg = feat.aggregate_totes(at, agg_level=agg_level)

        at_expected = pd.DataFrame({'Module': {pd.to_datetime('2021-01-09 08:00:00'): 1,
                                                pd.to_datetime('2021-01-10 08:00:00'): 5,
                                                pd.to_datetime('2021-01-11 08:00:00'): 7,
                                                pd.to_datetime('2021-01-12 08:00:00'): 11,
                                                pd.to_datetime('2021-01-13 08:00:00'): 20},
                                    'TOTES': {pd.to_datetime('2021-01-09 08:00:00'): 42,
                                                pd.to_datetime('2021-01-10 08:00:00'): 30,
                                                pd.to_datetime('2021-01-11 08:00:00'): 21,
                                                pd.to_datetime('2021-01-12 08:00:00'): 55,
                                                pd.to_datetime('2021-01-13 08:00:00'): 90}})

        assert at_expected.equals(at_agg)

    def test_weight_hours(self):
        fa = pd.DataFrame({'C05PTT011': {pd.to_datetime('2021-01-09 08:00:00'): 6.480638923341991,
                                                pd.to_datetime('2021-01-09 09:00:00'): 5.499809670330265,
                                                pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                                'C1502RDC070': {pd.to_datetime('2021-01-09 08:00:00'): 7.835184586147302,
                                                pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                                'C1603STA253': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-11 08:00:00'): 7.0867747269123065},
                                'C2301RDC176': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 07:00:00'): 5.0943445622221,
                                                pd.to_datetime('2021-01-10 08:00:00'): 8.512071245835466,
                                                pd.to_datetime('2021-01-11 08:00:00'): 0.0}})

        fa_weight = feat.weight_hours(df = fa, weights = [0.5,0.5])

        fa_expected = pd.DataFrame({'C05PTT011': {pd.to_datetime('2021-01-09 08:00:00'): 3.2403194616709956,
                                                pd.to_datetime('2021-01-09 09:00:00'): 5.990224296836129,
                                                pd.to_datetime('2021-01-10 07:00:00'): 2.7499048351651325,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                                'C1502RDC070': {pd.to_datetime('2021-01-09 08:00:00'): 3.917592293073651,
                                                pd.to_datetime('2021-01-09 09:00:00'): 3.917592293073651,
                                                pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                                'C1603STA253': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-11 08:00:00'): 3.5433873634561532},
                                'C2301RDC176': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                                pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                                pd.to_datetime('2021-01-10 07:00:00'): 2.54717228111105,
                                                pd.to_datetime('2021-01-10 08:00:00'): 6.803207904028783,
                                                pd.to_datetime('2021-01-11 08:00:00'): 4.256035622917733}})

        assert fa_expected.equals(fa_weight)

    def test_merge_av_fa_at(self):
        av = pd.DataFrame({'Module': {pd.to_datetime('2021-01-09 08:00:00'): 1,
                                        pd.to_datetime('2021-01-10 08:00:00'): 5,
                                        pd.to_datetime('2021-01-11 08:00:00'): 7,
                                        pd.to_datetime('2021-01-12 08:00:00'): 11,
                                        pd.to_datetime('2021-01-13 08:00:00'): 20},
                                'Availability': {pd.to_datetime('2021-01-09 08:00:00'): 0.9,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.8,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.75,
                                        pd.to_datetime('2021-01-12 08:00:00'): 0.3,
                                        pd.to_datetime('2021-01-13 08:00:00'): 0.1}})
        av.index.name = 'timestamp'
        
        at = pd.DataFrame({'Module': {pd.to_datetime('2021-01-09 08:00:00'): 1,
                                        pd.to_datetime('2021-01-10 08:00:00'): 5,
                                        pd.to_datetime('2021-01-11 08:00:00'): 7,
                                        pd.to_datetime('2021-01-12 08:00:00'): 11,
                                        pd.to_datetime('2021-01-13 08:00:00'): 20},
                                'TOTES': {pd.to_datetime('2021-01-09 08:00:00'): 42,
                                        pd.to_datetime('2021-01-10 08:00:00'): 30,
                                        pd.to_datetime('2021-01-11 08:00:00'): 21,
                                        pd.to_datetime('2021-01-12 08:00:00'): 55,
                                        pd.to_datetime('2021-01-13 08:00:00'): 90}})
        at.index.name = 'timestamp'

        fa = pd.DataFrame({'C05PTT011': {pd.to_datetime('2021-01-09 08:00:00'): 6.480638923341991,
                                        pd.to_datetime('2021-01-09 09:00:00'): 5.499809670330265,
                                        pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                        'C1502RDC070': {pd.to_datetime('2021-01-09 08:00:00'): 7.835184586147302,
                                        pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.0},
                        'C1603STA253': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 07:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-11 08:00:00'): 7.0867747269123065},
                        'C2301RDC176': {pd.to_datetime('2021-01-09 08:00:00'): 0.0,
                                        pd.to_datetime('2021-01-09 09:00:00'): 0.0,
                                        pd.to_datetime('2021-01-10 07:00:00'): 5.0943445622221,
                                        pd.to_datetime('2021-01-10 08:00:00'): 8.512071245835466,
                                        pd.to_datetime('2021-01-11 08:00:00'): 0.0}})
        fa.index.name = 'timestamp'                                

        agg_level = 'Module'

        df = feat.merge_av_fa_at(av_df=av, at_df=at, fa_df=fa,
                            agg_level=agg_level)

        df_expected = pd.DataFrame({'timestamp': {0: pd.to_datetime('2021-01-09 08:00:00'),
                                                1: pd.to_datetime('2021-01-10 08:00:00'),
                                                2: pd.to_datetime('2021-01-11 08:00:00')},
                                                'Availability': {0: 0.9, 1: 0.8, 2: 0.75},
                                                'C05PTT011': {0: 6.480638923341991, 1: 0.0, 2: 0.0},
                                                'C1502RDC070': {0: 7.835184586147302, 1: 0.0, 2: 0.0},
                                                'C1603STA253': {0: 0.0, 1: 0.0, 2: 7.0867747269123065},
                                                'C2301RDC176': {0: 0.0, 1: 8.512071245835466, 2: 0.0},
                                                'TOTES': {0: 42, 1: 30, 2: 21}})

        assert df.equals(df_expected)

    def test_create_PTT_df(self):

        fa = pd.DataFrame({'Alert ID': {0: 3.0,
                                        1: 1.0,
                                        2: 1.0,
                                        3: 4.0,
                                        4: 4.0,
                                        5: 7.0,
                                        6: 2.0,
                                        7: 0.0,
                                        8: 9.0,
                                        9: 5.0,
                                        10: 6.0,
                                        11: 5.0},
                                'Number': {0: '4',
                                        1: '2',
                                        2: '2',
                                        3: '5',
                                        4: '5',
                                        5: '8',
                                        6: '3',
                                        7: '1',
                                        8: '10',
                                        9: '6',
                                        10: '7',
                                        11: '6'},
                                'Alert': {0: 'C15: C1502RDC070 070B11 occupancy sensor fault',
                                        1: 'C05: C05PTT011_ external unit fault',
                                        2: 'C05: C05PTT011_ external unit fault',
                                        3: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                        4: 'C23: C2301RDC176 176B14 occupancy sensor fault',
                                        5: 'C07: C0702STA049 049B14 clearance sensor fault',
                                        6: 'C16: C1603STA253 253B12 occupancy sensor fault',
                                        7: 'SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                        8: 'C10: C1002STA081 081B15 clearance sensor fault',
                                        9: 'SCS M20: single module 1 emergency stop unit     [24.0]',
                                        10: 'C14: C1402STA049 049B14 clearance sensor fault',
                                        11: 'SCS M20: single module 1 emergency stop unit     [24.0]'},
                                'timestamp': dict(zip(np.arange(12),
                                        pd.to_datetime(['2021-01-09 08:00:00',
                                        '2021-01-09 08:00:00',
                                        '2021-01-09 09:00:00',
                                        '2021-01-10 07:00:00',
                                        '2021-01-10 08:00:00',
                                        '2021-01-10 08:00:00',
                                        '2021-01-11 08:00:00',
                                        '2021-01-12 08:00:00',
                                        '2021-01-12 08:00:00',
                                        '2021-01-13 08:00:00',
                                        '2021-01-13 08:00:00',
                                        '2021-01-13 09:00:00'])
                                        )),
                                'PLC': {0: 'C15',
                                        1: 'C05',
                                        2: 'C05',
                                        3: 'C23',
                                        4: 'C23',
                                        5: 'C07',
                                        6: 'C16',
                                        7: 'SCSM11',
                                        8: 'C10',
                                        9: 'SCSM20',
                                        10: 'C14',
                                        11: 'SCSM20'},
                                        'Desk': {0: 'P02',
                                        1: 'Z',
                                        2: 'Z',
                                        3: 'P01',
                                        4: 'P01',
                                        5: 'P02',
                                        6: 'P03',
                                        7: 'SCS116',
                                        8: 'P02',
                                        9: 'SCSM20',
                                        10: 'P02',
                                        11: 'SCSM20'},
                                'Duration': {0: 7.835184586147302,
                                        1: 6.480638923341991,
                                        2: 5.499809670330265,
                                        3: 5.0943445622221,
                                        4: 8.512071245835466,
                                        5: 2.9459101490553135,
                                        6: 7.0867747269123065,
                                        7: 4.401197381662156,
                                        8: 2.09861228866811,
                                        9: 8.922985958711195,
                                        10: 2.6094379124341005,
                                        11: 8.371489295214278},
                                'Fault ID': {0: 3416,
                                        1: 3611,
                                        2: 3611,
                                        3: 3416,
                                        4: 3416,
                                        5: 3419,
                                        6: 3416,
                                        7: 5105,
                                        8: 3419,
                                        9: 5416,
                                        10: 3419,
                                        11: 5416},
                                'Asset Code': {0: 'C1502RDC070',
                                        1: 'C05PTT011',
                                        2: 'C05PTT011',
                                        3: 'C2301RDC176',
                                        4: 'C2301RDC176',
                                        5: 'C0702STA049',
                                        6: 'C1603STA253',
                                        7: 'SCS116',
                                        8: 'C1002STA081',
                                        9: 'SCSM20',
                                        10: 'C1402STA049',
                                        11: 'SCSM20'},
                                'Area': {0: 'C15',
                                        1: 'PTT',
                                        2: 'PTT',
                                        3: 'C23',
                                        4: 'C23',
                                        5: 'Module Loop Blue',
                                        6: 'C16',
                                        7: 'Carousel',
                                        8: 'Module Loop Grey',
                                        9: 'Carousel',
                                        10: 'Module Loop Blue',
                                        11: 'Carousel'},
                                'Tote Colour': {0: 'Blue',
                                        1: 'Both',
                                        2: 'Both',
                                        3: 'Blue',
                                        4: 'Blue',
                                        5: 'Blue',
                                        6: 'Blue',
                                        7: 'Grey',
                                        8: 'Grey',
                                        9: 'Grey',
                                        10: 'Blue',
                                        11: 'Grey'},
                                'Loop': {0: 'Outside',
                                        1: np.NaN,
                                        2: np.NaN,
                                        3: 'Outside',
                                        4: 'Outside',
                                        5: 'Module',
                                        6: 'Outside',
                                        7: 'carousel',
                                        8: 'Module',
                                        9: 'carousel',
                                        10: 'Module',
                                        11: 'carousel'},
                                'Suffix': {0: 'C1502',
                                        1: np.NaN,
                                        2: np.NaN,
                                        3: 'C2301',
                                        4: 'C2301',
                                        5: 'C0702',
                                        6: 'C1603',
                                        7: 'SCSM11',
                                        8: 'C1002',
                                        9: 'SCSM20',
                                        10: 'C1402',
                                        11: 'SCSM20'},
                                'Pick Station': {0: False,
                                        1: 'PTT011',
                                        2: 'PTT011',
                                        3: False,
                                        4: False,
                                        5: False,
                                        6: False,
                                        7: False,
                                        8: False,
                                        9: False,
                                        10: False,
                                        11: False},
                                'PLCN': {0: 15.0,
                                        1: 5.0,
                                        2: 5.0,
                                        3: 23.0,
                                        4: 23.0,
                                        5: 7.0,
                                        6: 16.0,
                                        7: 0.0,
                                        8: 10.0,
                                        9: 0.0,
                                        10: 14.0,
                                        11: 0.0},
                                'Quadrant': {0: 0.0,
                                        1: 1.0,
                                        2: 1.0,
                                        3: 0.0,
                                        4: 0.0,
                                        5: 1.0,
                                        6: 0.0,
                                        7: 3.0,
                                        8: 3.0,
                                        9: 4.0,
                                        10: 4.0,
                                        11: 4.0},
                                'MODULE': {0: np.NaN,
                                        1: '1',
                                        2: '1',
                                        3: np.NaN,
                                        4: np.NaN,
                                        5: '4',
                                        6: np.NaN,
                                        7: '11',
                                        8: '11',
                                        9: '20',
                                        10: '19',
                                        11: '20'},
                                'Alert Type': {0: 'Fault',
                                        1: 'Fault',
                                        2: 'Fault',
                                        3: 'Fault',
                                        4: 'Fault',
                                        5: 'Fault',
                                        6: 'Fault',
                                        7: 'Fault',
                                        8: 'Fault',
                                        9: 'Fault',
                                        10: 'Fault',
                                        11: 'Fault'},
                                'Entry Time': dict(zip(np.arange(12),
                                        pd.to_datetime(['2021-01-09 08:20:00',
                                        '2021-01-09 08:56:00',
                                        '2021-01-09 09:00:00',
                                        '2021-01-10 07:59:00',
                                        '2021-01-10 08:00:00',
                                        '2021-01-10 08:49:00',
                                        '2021-01-11 08:34:00',
                                        '2021-01-12 08:12:00',
                                        '2021-01-12 08:01:00',
                                        '2021-01-13 08:14:00',
                                        '2021-01-13 08:46:00',
                                        '2021-01-13 09:00:00'],
                                        ))),
                                'End Time': dict(zip(np.arange(12),
                                        pd.to_datetime(['2021-01-09 08:35:30',
                                        '2021-01-09 09:00:00',
                                        '2021-01-09 09:01:30',
                                        '2021-01-10 08:00:00',
                                        '2021-01-10 08:30:30',
                                        '2021-01-10 08:49:07',
                                        '2021-01-11 08:41:20',
                                        '2021-01-12 08:12:30',
                                        '2021-01-12 08:01:03',
                                        '2021-01-13 09:00:00',
                                        '2021-01-13 08:46:05',
                                        '2021-01-13 09:26:30'])))
                                        })

        at = pd.DataFrame({'Module': [1, 5, 7, 11, 20],
                                'TOTES': [42, 30, 21, 55, 90],
                                'timestamp': pd.to_datetime([
                                '2021-01-09 08:30:00',
                                '2021-01-10 08:30:00',
                                '2021-01-11 08:30:00',
                                '2021-01-12 08:30:00',
                                '2021-01-13 08:30:00']),
                                'Quadrant': [1, 1, 2, 3, 4]})

        av = pd.DataFrame({'timestamp': pd.to_datetime(['2021-01-09 08:00:00',
                                        '2021-01-10 08:00:00',
                                        '2021-01-11 08:00:00',
                                        '2021-01-12 08:00:00',
                                        '2021-01-13 08:00:00']),
                        'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                        'PTT112', 'PTT202'],
                        'Availability': [0.9, 0.8, 0.75, 0.3, 0.1],
                        'Quadrant': [1, 1, 2, 3, 4],
                        'Module': [1,5,7,11,20]})
                
        df_PTT, fa_PTT = feat.create_PTT_df(fa_floor = fa, at = at, av = av, weights=None)

        df_PTT.reset_index(inplace=True,drop=True)

        df_PTT_expected = pd.DataFrame({'timestamp': {0: pd.to_datetime('2021-01-09 08:00:00'),
                                                        1: pd.to_datetime('2021-01-10 08:00:00'),
                                                        2: pd.to_datetime('2021-01-11 08:00:00'),
                                                        3: pd.to_datetime('2021-01-12 08:00:00'),
                                                        4: pd.to_datetime('2021-01-13 08:00:00')},
                                        'Availability': {0: 0.9, 1: 0.8, 2: 0.75, 3: 0.3, 4: 0.1},
                                        'C05PTT011': {0: 6.480638923341991, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1502RDC070': {0: 7.835184586147302, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1603STA253': {0: 0.0, 1: 0.0, 2: 7.0867747269123065, 3: 0.0, 4: 0.0},
                                        'C2301RDC176': {0: 0.0, 1: 8.512071245835466, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1002STA081': {0: 0.0, 1: 0.0, 2: 0.0, 3: 2.09861228866811, 4: 0.0},
                                        'SCS116': {0: 0.0, 1: 0.0, 2: 0.0, 3: 4.401197381662156, 4: 0.0},
                                        'SCSM20': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 8.922985958711195},
                                        'TOTES': {0: 42, 1: 30, 2: 21, 3: 55, 4: 90}})

        fa_PTT_keys = list(fa_PTT.keys())
        fa_PTT_keys_expected = ['PTT011', 'PTT051', 'PTT072', 'PTT112', 'PTT202']

        assert df_PTT.equals(df_PTT_expected) and fa_PTT_keys == fa_PTT_keys_expected

    def test_log_totes(self):

        df = pd.DataFrame({'timestamp': {0: pd.to_datetime('2021-01-09 08:00:00'),
                                                        1: pd.to_datetime('2021-01-10 08:00:00'),
                                                        2: pd.to_datetime('2021-01-11 08:00:00'),
                                                        3: pd.to_datetime('2021-01-12 08:00:00'),
                                                        4: pd.to_datetime('2021-01-13 08:00:00')},
                                        'Availability': {0: 0.9, 1: 0.8, 2: 0.75, 3: 0.3, 4: 0.1},
                                        'C05PTT011': {0: 6.480638923341991, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1502RDC070': {0: 7.835184586147302, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1603STA253': {0: 0.0, 1: 0.0, 2: 7.0867747269123065, 3: 0.0, 4: 0.0},
                                        'C2301RDC176': {0: 0.0, 1: 8.512071245835466, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1002STA081': {0: 0.0, 1: 0.0, 2: 0.0, 3: 2.09861228866811, 4: 0.0},
                                        'SCS116': {0: 0.0, 1: 0.0, 2: 0.0, 3: 4.401197381662156, 4: 0.0},
                                        'SCSM20': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 8.922985958711195},
                                        'TOTES': {0: 42, 1: 30, 2: 21, 3: 55, 4: 90}})

        df_log = feat.log_totes(df)

        df_log_expected = pd.DataFrame({'timestamp': {0: pd.to_datetime('2021-01-09 08:00:00'),
                                                        1: pd.to_datetime('2021-01-10 08:00:00'),
                                                        2: pd.to_datetime('2021-01-11 08:00:00'),
                                                        3: pd.to_datetime('2021-01-12 08:00:00'),
                                                        4: pd.to_datetime('2021-01-13 08:00:00')},
                                        'Availability': {0: 0.9, 1: 0.8, 2: 0.75, 3: 0.3, 4: 0.1},
                                        'C05PTT011': {0: 6.480638923341991, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1502RDC070': {0: 7.835184586147302, 1: 0.0, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1603STA253': {0: 0.0, 1: 0.0, 2: 7.0867747269123065, 3: 0.0, 4: 0.0},
                                        'C2301RDC176': {0: 0.0, 1: 8.512071245835466, 2: 0.0, 3: 0.0, 4: 0.0},
                                        'C1002STA081': {0: 0.0, 1: 0.0, 2: 0.0, 3: 2.09861228866811, 4: 0.0},
                                        'SCS116': {0: 0.0, 1: 0.0, 2: 0.0, 3: 4.401197381662156, 4: 0.0},
                                        'SCSM20': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 4: 8.922985958711195},
                                        'log_totes': {0: 3.7376696182833684,
                                                        1: 3.4011973816621555,
                                                        2: 3.044522437723423,
                                                        3: 4.007333185232471,
                                                        4: 4.499809670330265}})

        assert df_log.equals(df_log_expected)




        

        


