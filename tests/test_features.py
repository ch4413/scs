from pytest import mark
from scsavailability import features as feat
import pandas as pd
import numpy as np


@mark.feature
class FeatureTests:
    def test_load_module_lookup(self):
        lu = feat.load_module_lookup()
        assert list(lu.columns) == ['PLC', 'Desk_edit', 'MODULE']

    def test_load_tote_lookup(self):
        lu = feat.load_tote_lookup()
        assert list(lu.columns) == ['Area', 'Tote Colour', 'Loop', 'Suffix',
                                    'Number', 'Asset Code']

    def test_load_ID_lookup(self):
        lu = feat.load_ID_lookup()
        assert list(lu.columns) == ['Fault ID', '0 Merger', 'Alert Type']

    def test_load_PTT_lookup(self):
        lu = feat.load_PTT_lookup()
        assert list(lu.columns) == ['Asset Code', 'Pick Station']

    def test_preprocess_at(self):

        at = pd.DataFrame({'ID': [1, 5, 7, 11, 20],
                           'MODULE_ASSIGNED': ['SCS01', 'SCS05', 'SCS07',
                                               'SCS11', 'SCS20'],
                           'TOTES': ['42', '30', '21', '55', '90'],
                           'DAY': ['9', '10', '11', '12', '13'],
                           'MONTH': ['01', '01', '01', '01', '01'],
                           'YEAR': ['2021', '2021', '2021', '2021',
                                    '2021'],
                           'HOUR': ['08', '08', '08', '08', '08'],
                           'MINUTE': ['30', '30', '30', '30', '30']})
        at_processed = feat.pre_process_at(at)
        at_expected = pd.DataFrame({'Module': [1, 5, 7, 11, 20],
                                    'TOTES': ['42', '30', '21', '55', '90'],
                                    'timestamp': pd.to_datetime([
                                        '2021-01-09 08:30:00',
                                        '2021-01-10 08:30:00',
                                        '2021-01-11 08:30:00',
                                        '2021-01-12 08:30:00',
                                        '2021-01-13 08:30:00']),
                                    'Quadrant': [1, 1, 2, 3, 4]})

        assert at_processed.equals(at_expected)

    def test_preprocess_av(self):
        av = pd.DataFrame({'timestamp': ['2021-01-09 08:00:00',
                                         '2021-01-10 08:00:00',
                                         '2021-01-11 08:00:00',
                                         '2021-01-12 08:00:00',
                                         '2021-01-13 08:00:00'],
                           'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                            'PTT112', 'PTT202'],
                           'Availability': [0.9, 0.8, 0.75, 0.3, 0.1]})
        av_processed = feat.pre_process_av(av)
        av_expected = pd.DataFrame({'timestamp': pd.to_datetime(['2021-01-09 08:00:00',
                                         '2021-01-10 08:00:00',
                                         '2021-01-11 08:00:00',
                                         '2021-01-12 08:00:00',
                                         '2021-01-13 08:00:00']),
                           'Pick Station': ['PTT011', 'PTT051', 'PTT072',
                                            'PTT112', 'PTT202'],
                           'Availability': [0.9, 0.8, 0.75, 0.3, 0.1],
                           'Quadrant': [1, 1, 2, 3, 4],
                           'Module': np.array([1,5,7,11,20], dtype=np.int32)})
        assert av_processed.equals(av_expected)

    def test_add_code(self):
        fa = pd.DataFrame({'Number': ['1','2','3','4','5',
                                    '6','7','8','9','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1404STA164 164D702 scanner / data tracking fault',
                                    'C07: C0702STA074 074D702 scanner / data tracking fault',
                                    'C08: C0803STA102 102D702 scanner / data tracking fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-11 08:11:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C08','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P04','P02','P03','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:01',
                                         '0.00:00:03'],
                            'Fault ID': ['5105','3611','3416','3416','3416',
                                    '5416','3504','3504','3504','3419']})

        fa_processed = feat.add_code(fa)
        fa_expected = pd.DataFrame({'Number': ['1','2','3','4','5',
                                    '6','7','8','9','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1404STA164 164D702 scanner / data tracking fault',
                                    'C07: C0702STA074 074D702 scanner / data tracking fault',
                                    'C08: C0803STA102 102D702 scanner / data tracking fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-11 08:11:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C08','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P04','P02','P03','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:01',
                                         '0.00:00:03'],
                            'Fault ID': ['5105','3611','3416','3416','3416',
                                    '5416','3504','3504','3504','3419'],
                            'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                          'C2301RDC176','SCSM20','C1404STA164','C0702STA074',
                                          'C0803STA102','C1002STA081']})

        assert fa_processed.equals(fa_expected)

    def test_add_tote_colour(self):
        fa = pd.DataFrame({'Number': ['1','2','3','4','5',
                                '6','7','8','9','10'],
                        'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                'C05: C05PTT011_ external unit fault',
                                'C16: C1603STA253 253B12 occupancy sensor fault',
                                'C15: C1502RDC070 070B11 occupancy sensor fault',
                                'C23: C2301RDC176 176B14 occupancy sensor fault',
                                'SCS M20: single module 1 emergency stop unit     [24.0]',
                                'C14: C1404STA164 164D702 scanner / data tracking fault',
                                'C07: C0702STA074 074D702 scanner / data tracking fault',
                                'C08: C0803STA102 102D702 scanner / data tracking fault',
                                'C10: C1002STA081 081B15 clearance sensor fault'],
                        'Entry Time': ['2021-01-12 08:12:00',
                                        '2021-01-09 08:56:00',
                                        '2021-01-11 08:34:00',
                                        '2021-01-09 08:20:00',
                                        '2021-01-10 07:59:00',
                                        '2021-01-13 08:14:00',
                                        '2021-01-13 08:46:00',
                                        '2021-01-10 08:49:00',
                                        '2021-01-11 08:11:00',
                                        '2021-01-12 08:01:00'],
                        'PLC': ['SCSM11','C05','C16','C15','C23',
                                'SCSM20','C14','C07','C08','C10'],
                        'Desk': ['SCS116','Z','P03','P02','P01',
                                'SCSM20','P04','P02','P03','P02'],
                        'Duration': ['0.00:00:30',
                                        '0.00:05:30',
                                        '0.00:07:20',
                                        '0.00:15:30',
                                        '0.00:31:30',
                                        '0.01:12:30',
                                        '0.00:00:05',
                                        '0.00:00:07',
                                        '0.00:00:01',
                                        '0.00:00:03'],
                        'Fault ID': ['5105','3611','3416','3416','3416',
                                '5416','3504','3504','3504','3419'],
                        'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                        'C2301RDC176','SCSM20','C1404STA164','C0702STA074',
                                        'C0803STA102','C1002STA081']})

        fa_processed,unmapped = feat.add_tote_colour(fa)

        fa_expected = pd.DataFrame({'Number': ['1','2','3','4','5',
                                '6','7','8','9','10'],
                        'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                'C05: C05PTT011_ external unit fault',
                                'C16: C1603STA253 253B12 occupancy sensor fault',
                                'C15: C1502RDC070 070B11 occupancy sensor fault',
                                'C23: C2301RDC176 176B14 occupancy sensor fault',
                                'SCS M20: single module 1 emergency stop unit     [24.0]',
                                'C14: C1404STA164 164D702 scanner / data tracking fault',
                                'C07: C0702STA074 074D702 scanner / data tracking fault',
                                'C08: C0803STA102 102D702 scanner / data tracking fault',
                                'C10: C1002STA081 081B15 clearance sensor fault'],
                        'Entry Time': ['2021-01-12 08:12:00',
                                        '2021-01-09 08:56:00',
                                        '2021-01-11 08:34:00',
                                        '2021-01-09 08:20:00',
                                        '2021-01-10 07:59:00',
                                        '2021-01-13 08:14:00',
                                        '2021-01-13 08:46:00',
                                        '2021-01-10 08:49:00',
                                        '2021-01-11 08:11:00',
                                        '2021-01-12 08:01:00'],
                        'PLC': ['SCSM11','C05','C16','C15','C23',
                                'SCSM20','C14','C07','C08','C10'],
                        'Desk': ['SCS116','Z','P03','P02','P01',
                                'SCSM20','P04','P02','P03','P02'],
                        'Duration': ['0.00:00:30',
                                        '0.00:05:30',
                                        '0.00:07:20',
                                        '0.00:15:30',
                                        '0.00:31:30',
                                        '0.01:12:30',
                                        '0.00:00:05',
                                        '0.00:00:07',
                                        '0.00:00:01',
                                        '0.00:00:03'],
                        'Fault ID': ['5105','3611','3416','3416','3416',
                                '5416','3504','3504','3504','3419'],
                        'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                        'C2301RDC176','SCSM20','C1404STA164','C0702STA074',
                                        'C0803STA102','C1002STA081'],
                        'Area': ['Carousel','PTT','C16','C15',
                                        'C23','Carousel','Module Loop Grey','Module Loop Grey',
                                        'Quadrant Loop Blue','Module Loop Grey'],
                        'Tote Colour': ['Grey','Both','Blue','Blue',
                                        'Blue','Grey','Grey','Grey',
                                        'Blue','Grey'],
                        'Loop': ['carousel',np.NaN,'Outside','Outside',
                                        'Outside','carousel','Module','Module',
                                        'Quadrant','Module'],
                        'Suffix': ['SCSM11',np.NaN,'C1603','C1502',
                                        'C2301','SCSM20','C1404','C0702',
                                        'C0803','C1002'],
                        'Pick Station': [False,'PTT011',False,False,
                                        False,False,False,False,
                                        False,False],
                        'PLCN': np.array([0,5,16,15,23,0,14,7,8,10],dtype=np.int32)})

        assert fa_processed.equals(fa_expected) and unmapped.empty

    def test_preprocess_fa(self):
        """fa = pd.DataFrame({'Number': ['1','2','3','4','5',
                                    '6','7','8','9','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1402STA049 049B14 clearance sensor fault',
                                    'C07: C0702STA049 049B14 clearance sensor fault',
                                    'C08: C0803STA102 102D702 scanner / data tracking fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-11 08:11:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C08','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P02','P02','P03','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:01',
                                         '0.00:00:03'],
                            'Fault ID': [5105,3611,3416,3416,3416,
                                    5416,3419,3419,3504,3419]})    

        fa_processed,unmapped = feat.pre_process_fa(fa)

        fa_expected = pd.DataFrame({'Alert ID': [0.0,1.0,2.0,3.0,4.0,
                                    5.0,6.0,7.0,9.0],
                            'Number': ['1','2','3','4','5',
                                    '6','7','8','10'],
                           'Alert': ['SCS116: sto: timeout bin from lifter to car X:5 Y:4 S:2 [13.1] ',
                                    'C05: C05PTT011_ external unit fault',
                                    'C16: C1603STA253 253B12 occupancy sensor fault',
                                    'C15: C1502RDC070 070B11 occupancy sensor fault',
                                    'C23: C2301RDC176 176B14 occupancy sensor fault',
                                    'SCS M20: single module 1 emergency stop unit     [24.0]',
                                    'C14: C1402STA049 049B14 clearance sensor fault',
                                    'C07: C0702STA049 049B14 clearance sensor fault',
                                    'C10: C1002STA081 081B15 clearance sensor fault'],
                            'Entry Time': ['2021-01-12 08:12:00',
                                         '2021-01-09 08:56:00',
                                         '2021-01-11 08:34:00',
                                         '2021-01-09 08:20:00',
                                         '2021-01-10 07:59:00',
                                         '2021-01-13 08:14:00',
                                         '2021-01-13 08:46:00',
                                         '2021-01-10 08:49:00',
                                         '2021-01-12 08:01:00'],
                            'PLC': ['SCSM11','C05','C16','C15','C23',
                                    'SCSM20','C14','C07','C10'],
                            'Desk': ['SCS116','Z','P03','P02','P01',
                                    'SCSM20','P02','P02','P02'],
                            'Duration': ['0.00:00:30',
                                         '0.00:05:30',
                                         '0.00:07:20',
                                         '0.00:15:30',
                                         '0.00:31:30',
                                         '0.01:12:30',
                                         '0.00:00:05',
                                         '0.00:00:07',
                                         '0.00:00:03'],
                            'Fault ID': [5105,3611,3416,3416,3416,
                                    5416,3419,3419,3419],
                            'Asset Code': ['SCS116','C05','C1603STA253','C1502RDC070',
                                        'C2301RDC176','SCSM20','C1402STA049','C0702STA049',
                                        'C1002STA081'],
                            'Area': ['Carousel','PTT','C16','C15',
                                            'C23','Carousel','Module Loop Grey','Module Loop Grey',
                                            'Quadrant Loop Blue','Module Loop Grey'],
                            'Tote Colour': ['Grey','Both','Blue','Blue',
                                            'Blue','Grey','Grey','Grey',
                                            'Blue','Grey'],
                            'Loop': ['carousel',np.NaN,'Outside','Outside',
                                            'Outside','carousel','Module','Module',
                                            'Quadrant','Module'],
                            'Suffix': ['SCSM11',np.NaN,'C1603','C1502',
                                            'C2301','SCSM20','C1404','C0702',
                                            'C0803','C1002'],
                            'Pick Station': [False,'PTT011',False,False,
                                            False,False,False,False,
                                            False,False],
                            'PLCN': np.array([0,5,16,15,23,0,14,7,8,10],dtype=np.int32)})"""
        assert True
            